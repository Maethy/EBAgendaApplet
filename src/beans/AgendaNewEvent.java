
package beans;

import business.EventUtil;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import tables.EbCli;
import tables.Employees;
import ui.TestApplet;

/**
 *
 * @author MpUser
 */
public class AgendaNewEvent extends javax.swing.JPanel {
    
    private List<JCheckBox> userCheckBoxes;
    private List<EbCli> cliList;
    private JFrame parent;
    private Calendar start, end;
    
    /**
     * Creates new form AgendaNewEventPanel
     */
    public AgendaNewEvent(Calendar date, JFrame parent) {
        userCheckBoxes = new ArrayList();
        initComponents();        
        
        this.parent = parent;
        start = Calendar.getInstance();
        end = Calendar.getInstance();
        start.setTimeInMillis(date.getTimeInMillis());
        end.setTimeInMillis(date.getTimeInMillis());
//        start.set(Calendar.HOUR_OF_DAY, 9);
        end.set(Calendar.HOUR_OF_DAY, start.get(Calendar.HOUR_OF_DAY)+1);
        this.startTimeBean.setDateTime(start);
        this.endTimeBean.setDateTime(end);
        populateUsers();
    }
    
    private void populateUsers(){
        for(Employees emp : TestApplet.empList){
            JCheckBox ckb = new JCheckBox();
            ckb.setText(emp.getInitiales());
            userCheckBoxes.add(ckb);
        }
        for(JCheckBox ckb : userCheckBoxes){
            this.userPanel.add(ckb);
        }
    }

    public Calendar getStartTime() {
        System.out.println(startTimeBean.getDateTime().getTime());
        return startTimeBean.getDateTime();
    }

    public Calendar getEndTime() {
        return endTimeBean.getDateTime();
    }
    
    public EbCli getClient() {
        return (EbCli)jComboBox1.getSelectedItem();
    }
    
    public String getEventName(){
        return fieldEventName.getText();
    }
    
    public String getEventDesc(){
        return txtEventDesc.getText();
    }
    
    public Employees[] getEmployees(){
        List <Employees> participants = new ArrayList();
        for(Object o : userPanel.getComponents()){
            if(o instanceof JCheckBox){
                JCheckBox ckb = (JCheckBox)o;
                String initiales = ckb.getText();
                if(ckb.isSelected()){
                    if(TestApplet.empMap.containsKey(initiales)){
                        Employees emp = TestApplet.empMap.get(initiales);
                        participants.add(emp);
                    }
                }
            }
        }
        System.out.println(participants.size()+" participants");
        return participants.toArray(new Employees[0]);
    }
    
    private Object[] populateClients(){
        cliList = EventUtil.getClients();
        return cliList.toArray();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        title = new javax.swing.JLabel();
        contentPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        fieldEventName = new javax.swing.JTextField();
        ckBoxFullDay = new javax.swing.JCheckBox();
        startDatePanel = new javax.swing.JPanel();
        startTimeBean = new beans.DateTimeBean();
        endDatePanel = new javax.swing.JPanel();
        endTimeBean = new beans.DateTimeBean();
        usersPanel = new javax.swing.JPanel();
        userPanel = new javax.swing.JPanel();
        cliPanel = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        descPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEventDesc = new javax.swing.JTextArea();
        btPanel = new javax.swing.JPanel();
        btCreateEvent = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        title.setText("Nouvel évènement");
        add(title, java.awt.BorderLayout.PAGE_START);

        contentPanel.setLayout(new java.awt.GridBagLayout());

        titlePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Titre"));
        titlePanel.setLayout(new javax.swing.BoxLayout(titlePanel, javax.swing.BoxLayout.LINE_AXIS));
        titlePanel.add(fieldEventName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.weightx = 1.0;
        contentPanel.add(titlePanel, gridBagConstraints);

        ckBoxFullDay.setText("Journée Entière");
        ckBoxFullDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckBoxFullDayActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        contentPanel.add(ckBoxFullDay, gridBagConstraints);

        startDatePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Début"));
        startDatePanel.setLayout(new javax.swing.BoxLayout(startDatePanel, javax.swing.BoxLayout.LINE_AXIS));
        startDatePanel.add(startTimeBean);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.weightx = 1.0;
        contentPanel.add(startDatePanel, gridBagConstraints);

        endDatePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Fin"));
        endDatePanel.setLayout(new javax.swing.BoxLayout(endDatePanel, javax.swing.BoxLayout.LINE_AXIS));
        endDatePanel.add(endTimeBean);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        contentPanel.add(endDatePanel, gridBagConstraints);

        usersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Participants"));
        usersPanel.setLayout(new javax.swing.BoxLayout(usersPanel, javax.swing.BoxLayout.LINE_AXIS));

        userPanel.setLayout(new java.awt.GridLayout(0, 6));
        usersPanel.add(userPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        contentPanel.add(usersPanel, gridBagConstraints);

        cliPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Client"));
        cliPanel.setLayout(new javax.swing.BoxLayout(cliPanel, javax.swing.BoxLayout.LINE_AXIS));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(populateClients()));
        cliPanel.add(jComboBox1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        contentPanel.add(cliPanel, gridBagConstraints);

        descPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));
        descPanel.setLayout(new javax.swing.BoxLayout(descPanel, javax.swing.BoxLayout.LINE_AXIS));

        txtEventDesc.setColumns(20);
        txtEventDesc.setRows(5);
        jScrollPane1.setViewportView(txtEventDesc);

        descPanel.add(jScrollPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        contentPanel.add(descPanel, gridBagConstraints);

        btPanel.setLayout(new java.awt.GridBagLayout());

        btCreateEvent.setText("Créer");
        btCreateEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCreateEventActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        btPanel.add(btCreateEvent, gridBagConstraints);

        btCancel.setText("Annuler");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        btPanel.add(btCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        contentPanel.add(btPanel, gridBagConstraints);

        add(contentPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void ckBoxFullDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckBoxFullDayActionPerformed
        
        start.set(Calendar.HOUR_OF_DAY, 9);
        end.set(Calendar.HOUR_OF_DAY, 17);
        this.startTimeBean.setDateTime(start);
        this.endTimeBean.setDateTime(end);
        this.startTimeBean.setEnabled(!ckBoxFullDay.isSelected());
        this.endTimeBean.setEnabled(!ckBoxFullDay.isSelected());
        
    }//GEN-LAST:event_ckBoxFullDayActionPerformed

    private void btCreateEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCreateEventActionPerformed
        EventUtil.addEvent(this.getEventName(), this.getEventDesc(), //On crée le nouvel évènement, et on le récupère dans la liste
                this.getStartTime(), this.getEndTime(), 
                this.getClient().getIdebCli(), this.getEmployees(), 
                this.ckBoxFullDay.isSelected());
        EventUtil.gettApp().reload();
        this.parent.dispose();
    }//GEN-LAST:event_btCreateEventActionPerformed

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        this.parent.dispose();
    }//GEN-LAST:event_btCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btCreateEvent;
    private javax.swing.JPanel btPanel;
    private javax.swing.JCheckBox ckBoxFullDay;
    private javax.swing.JPanel cliPanel;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JPanel descPanel;
    private javax.swing.JPanel endDatePanel;
    private beans.DateTimeBean endTimeBean;
    private javax.swing.JTextField fieldEventName;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel startDatePanel;
    private beans.DateTimeBean startTimeBean;
    private javax.swing.JLabel title;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JTextArea txtEventDesc;
    private javax.swing.JPanel userPanel;
    private javax.swing.JPanel usersPanel;
    // End of variables declaration//GEN-END:variables
}
